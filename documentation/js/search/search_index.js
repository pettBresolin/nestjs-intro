var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.29,1,2.425]],["body/controllers/AppController.html",[0,1.696,1,3.189,2,1.227,3,0.276,4,0.222,5,0.171,6,2.885,7,0.492,8,1.598,9,3.988,10,3.387,11,4.737,12,1.227,13,0.023,14,2.307,15,3.189,16,5.351,17,4.279,18,6.283,19,0.563,20,3.387,21,4.682,22,3.988,23,4.682,24,3.189,25,3.988,26,2.916,27,6.283,28,3.769,29,3.53,30,3.988,31,4.682,32,1.029,33,0.816,34,0.492,35,0.865,36,1.156,37,5.788,38,4.57,39,1.508,40,0.62,41,0.724,42,2.689,43,1.945,44,3.387,45,3.082,46,2.885,47,3.387,48,0.276,49,0.082,50,1.384,51,1.302,52,2.11,53,1.945,54,3.387,55,1.682,56,2.885,57,3.387,58,3.387,59,1.156,60,3.387,61,0.015,62,0.015]],["title/modules/AppModule.html",[63,1.216,64,2.425]],["body/modules/AppModule.html",[1,3.72,2,1.735,3,0.285,4,0.23,5,0.177,13,0.023,40,0.719,41,0.749,45,3.646,46,2.984,48,0.285,49,0.085,61,0.015,62,0.015,63,1.636,64,4.848,65,1.525,66,1.959,67,2.984,68,2.984,69,2.984,70,3.954,71,3.954,72,2.762,73,3.954,74,3.954,75,3.954,76,2.379,77,1.74,78,1.626,79,3.504,80,2.553,81,2.752,82,3.504,83,3.504,84,3.504,85,3.504,86,3.504,87,3.504,88,3.504]],["title/injectables/AppService.html",[45,2.045,89,1.021]],["body/injectables/AppService.html",[3,0.366,4,0.295,5,0.227,7,0.653,8,1.927,9,4.808,13,0.023,16,4.808,19,0.748,32,1.367,33,1.083,34,0.653,35,1.149,39,1.449,40,0.482,41,0.962,45,3.242,48,0.366,49,0.109,56,4.808,59,1.536,61,0.018,62,0.018,89,1.619,90,2.088,91,3.831,92,5.645,93,1.702,94,4.498,95,5.645,96,3.831,97,4.498,98,4.498]],["title/controllers/AuthController.html",[0,1.29,99,2.425]],["body/controllers/AuthController.html",[0,1.168,2,1.168,3,0.263,4,0.211,5,0.163,7,0.469,8,1.545,12,1.639,13,0.023,19,0.753,25,3.855,26,2.819,28,2.599,32,1.375,33,1.09,34,0.657,35,1.156,39,1.457,40,0.706,41,0.69,42,3.002,43,1.853,48,0.263,49,0.078,50,1.319,51,1.24,53,2.599,59,1.545,61,0.014,62,0.014,99,3.082,100,2.748,101,2.009,102,3.226,103,3.86,104,4.526,105,2.748,106,3.854,107,3.226,108,4.526,109,4.526,110,3.413,111,4.526,112,3.226,113,2.599,114,3.226,115,2.348,116,3.226,117,3.413,118,2.819,119,3.413,120,3.226,121,3.226,122,1.853,123,2.197,124,2.197,125,2.819,126,2.009,127,2.748,128,2.009,129,1.319,130,2.819,131,1.039,132,2.009,133,3.002,134,2.748,135,2.197,136,3.226,137,2.748,138,2.009,139,2.748,140,2.748,141,2.748,142,3.226,143,3.226,144,3.226,145,3.226,146,3.226,147,2.009,148,3.226,149,3.226]],["title/modules/AuthModule.html",[63,1.216,70,2.218]],["body/modules/AuthModule.html",[2,1.84,3,0.311,4,0.251,5,0.193,13,0.023,40,0.712,41,0.817,48,0.311,49,0.093,61,0.016,62,0.016,63,1.735,65,1.663,66,2.077,70,4.298,72,2.833,76,2.523,77,1.897,78,1.774,80,2.707,81,2.918,99,3.888,133,3.74,134,3.255,150,3.255,151,3.822,152,3.255,153,4.056,154,3.822,155,3.822,156,2.38,157,3.822,158,2.882,159,2.38,160,3.822,161,3.822,162,3.822,163,1.897,164,3.822,165,3.822,166,3.255,167,3.822,168,3.822,169,3.822]],["title/injectables/AuthService.html",[89,1.021,133,2.045]],["body/injectables/AuthService.html",[3,0.274,4,0.221,5,0.17,7,0.489,8,1.592,13,0.023,19,0.776,32,1.417,33,1.123,34,0.677,35,1.191,39,1.085,40,0.672,41,0.72,48,0.274,49,0.082,51,1.793,55,2.656,59,1.15,61,0.014,62,0.014,89,1.338,90,1.564,103,3.177,105,3.972,106,3.906,110,2.54,113,2.679,115,1.937,133,2.679,138,2.098,139,2.869,140,2.869,141,2.869,158,2.54,170,2.869,171,2.85,172,2.679,173,1.935,174,2.36,175,6.43,176,3.369,177,2.315,178,3.369,179,2.869,180,1.935,181,3.517,182,3.517,183,2.85,184,1.935,185,2.485,186,2.54,187,2.905,188,2.165,189,4.664,190,4.664,191,3.517,192,4.664,193,4.664,194,3.369,195,3.972,196,1.564,197,3.369]],["title/classes/CreateOrderDto.html",[49,0.087,198,2.218]],["body/classes/CreateOrderDto.html",[3,0.291,4,0.234,5,0.18,7,0.519,12,1.76,13,0.022,17,3.309,19,0.808,29,3.664,34,0.928,36,1.659,40,0.634,48,0.291,49,0.134,61,0.015,62,0.015,117,3.664,131,1.152,198,3.026,199,1.152,200,4.162,201,3.046,202,1.659,203,3.437,204,5.519,205,4.217,206,3.576,207,3.576,208,4.859,209,3.309,210,4.859,211,4.859,212,4.138,213,5.921,214,4.859,215,4.465,216,3.046,217,3.576,218,2.412,219,3.046,220,4.138,221,3.664,222,4.138,223,4.859,224,2.255,225,3.309,226,3.576,227,2.94,228,3.046,229,4.138,230,3.664,231,3.046,232,4.859,233,1.905,234,1.152,235,2.054,236,2.435,237,3.576,238,2.696]],["title/classes/CreateOrderProductDto.html",[49,0.087,205,2.425]],["body/classes/CreateOrderProductDto.html",[3,0.292,4,0.235,5,0.181,7,0.521,12,2.002,13,0.022,19,0.919,28,2.796,34,0.803,36,2.182,40,0.521,48,0.292,49,0.118,61,0.015,62,0.015,93,1.514,131,1.155,199,1.155,200,4.47,202,1.662,205,3.316,215,3.671,218,2.417,219,3.055,224,2.967,225,3.316,227,3.159,229,4.147,230,3.671,231,4.147,233,1.911,235,3.405,239,2.443,240,4.708,241,4.708,242,2.704,243,4.869,244,4.47,245,4.869,246,4.869,247,3.586,248,3.586,249,1.763,250,4.869,251,4.869,252,4.869,253,4.869,254,4.869,255,3.055,256,4.869,257,4.869,258,3.586,259,3.316]],["title/classes/CreateProductDto.html",[49,0.087,260,2.045]],["body/classes/CreateProductDto.html",[3,0.272,4,0.219,5,0.169,7,0.485,12,2.084,13,0.022,19,0.957,24,3.158,28,2.663,33,1.283,34,0.836,36,2.19,40,0.497,48,0.272,49,0.113,61,0.014,62,0.014,93,1.598,131,1.076,199,1.076,202,1.583,218,2.302,224,3.036,227,3.221,233,1.78,239,2.275,242,3.497,244,4.932,255,2.846,259,3.628,260,2.663,261,5.149,262,2.838,263,3.628,264,4.637,265,3.95,266,4.901,267,3.95,268,3.95,269,3.95,270,3.95,271,3.95,272,3.341,273,2.846,274,3.95,275,3.95,276,3.341,277,3.95,278,3.95,279,3.341,280,3.341,281,4.637,282,3.341,283,3.341,284,3.95,285,3.95,286,3.341,287,2.846,288,2.846]],["title/classes/CreateTableDto.html",[49,0.087,289,2.045]],["body/classes/CreateTableDto.html",[3,0.368,4,0.296,5,0.228,7,0.656,12,1.635,13,0.022,17,3.854,19,0.751,34,0.656,36,1.541,40,0.606,48,0.368,49,0.138,61,0.018,62,0.018,199,1.454,202,1.932,218,3.313,220,4.819,221,4.267,224,2.626,225,3.854,227,3.015,230,4.267,233,2.405,284,4.819,289,3.25,290,4.819,291,3.404,292,4.515,293,4.515,294,4.515]],["title/classes/CreateUserDto.html",[49,0.087,295,2.045]],["body/classes/CreateUserDto.html",[3,0.231,4,0.186,5,0.143,7,0.412,12,2.057,13,0.022,17,2.811,19,0.945,28,3.404,33,1.172,34,0.825,36,1.939,40,0.442,48,0.231,49,0.1,61,0.013,62,0.013,93,1.658,103,3.64,118,3.904,131,0.913,183,2.593,184,2.795,191,4.727,199,0.913,202,1.409,224,3.014,227,3.158,233,1.511,242,3.113,259,3.64,262,2.593,273,2.416,274,3.516,277,4.552,285,3.516,295,2.371,296,5.048,297,2.139,298,4.866,299,2.416,300,4.128,301,5.345,302,5.345,303,4.128,304,4.03,305,2.836,306,4.128,307,3.516,308,3.516,309,3.516,310,3.516,311,3.516,312,2.836,313,4.128,314,5.345,315,4.128,316,3.516,317,2.836,318,4.128,319,3.516,320,3.113,321,2.836,322,2.836,323,4.128,324,4.128,325,4.128,326,4.128,327,2.836,328,2.836,329,2.836,330,2.836,331,2.836,332,2.836,333,2.836]],["title/injectables/JwtStrategy.html",[89,1.021,153,2.218]],["body/injectables/JwtStrategy.html",[3,0.291,4,0.234,5,0.18,7,0.519,8,1.659,13,0.023,19,0.808,32,1.477,33,1.17,34,0.86,35,1.241,39,1.152,40,0.663,41,0.765,48,0.291,49,0.087,50,1.461,51,1.375,55,1.775,59,1.221,61,0.015,62,0.015,89,1.394,90,1.66,93,0.913,115,1.999,119,2.696,129,1.461,153,3.026,163,1.775,166,3.046,171,2.94,172,2.054,173,2.054,174,2.42,177,2.412,179,4.138,180,2.054,183,2.589,185,1.905,186,2.696,187,2.227,188,1.66,195,3.046,196,1.66,222,3.046,334,3.046,335,4.859,336,3.576,337,4.859,338,4.859,339,3.576,340,3.576,341,3.576,342,3.576,343,3.576,344,3.576,345,3.576,346,3.046,347,2.227,348,3.576,349,3.576,350,3.576,351,3.576,352,3.576,353,3.046,354,3.576,355,3.576,356,3.576,357,3.309,358,3.576,359,3.576]],["title/classes/LoginDto.html",[49,0.087,106,2.218]],["body/classes/LoginDto.html",[3,0.341,4,0.275,5,0.211,7,0.608,12,1.954,13,0.022,19,0.898,34,0.784,36,1.842,40,0.578,48,0.341,49,0.131,61,0.017,62,0.017,93,1.61,106,3.361,118,3.926,131,1.349,183,3.475,184,3.428,191,4.069,199,1.349,202,1.842,224,2.926,227,3.18,233,2.232,259,4.065,304,4.069,320,4.069,360,3.568,361,5.396,362,4.189,363,4.189,364,5.969]],["title/classes/LoginResponseDto.html",[49,0.087,138,2.218]],["body/classes/LoginResponseDto.html",[3,0.342,4,0.276,5,0.212,7,0.61,12,1.958,13,0.022,19,0.9,34,0.785,36,1.846,40,0.579,48,0.342,49,0.102,61,0.017,62,0.017,93,1.381,103,3.683,110,4.508,115,2.421,118,3.368,119,4.078,131,1.354,138,3.368,163,2.685,199,1.354,202,1.846,224,2.51,227,3.185,299,4.606,365,5.092,366,3.58,367,5.408,368,3.368,369,5.408,370,4.204,371,5.408,372,4.204,373,3.58]],["title/classes/Order.html",[49,0.087,235,2.045]],["body/classes/Order.html",[3,0.32,4,0.258,5,0.198,7,0.571,13,0.022,19,1.092,34,0.953,35,1.797,40,0.62,48,0.32,49,0.096,61,0.016,62,0.016,93,1.323,115,2.377,199,1.267,202,1.768,203,3.606,235,2.974,249,2.097,373,3.35,374,3.35,375,3.606,376,3.259,377,3.943,378,3.832,379,3.933,380,3.933,381,2.874,382,3.933,383,3.933,384,3.933,385,3.933,386,3.933,387,3.933]],["title/controllers/OrderController.html",[0,1.29,388,2.425]],["body/controllers/OrderController.html",[0,1.13,2,1.13,3,0.254,4,0.204,5,0.157,7,0.453,8,1.509,12,1.859,13,0.023,14,2.124,15,3.01,19,0.854,26,3.477,32,1.343,33,1.064,34,0.642,35,1.129,39,1.653,40,0.674,41,0.667,42,3.206,43,1.791,48,0.254,49,0.076,50,1.275,51,1.199,52,1.943,53,2.948,59,1.752,61,0.014,62,0.014,93,1.311,101,1.943,115,2.216,122,2.538,125,2.752,126,1.943,128,1.943,129,1.275,130,2.752,131,1.004,132,1.943,135,2.124,137,2.657,147,1.943,198,4.004,209,3.01,215,4.21,234,1.423,235,1.791,249,2.022,368,2.752,388,3.01,389,2.657,390,2.772,391,2.194,392,3.119,393,2.124,394,3.01,395,3.119,396,3.01,397,3.332,398,4.419,399,3.119,400,1.548,401,2.352,402,3.119,403,2.352,404,1.548,405,2.657,406,2.948,407,2.657,408,3.119,409,3.119,410,3.119,411,3.119,412,3.119,413,2.124,414,2.124,415,3.119]],["title/modules/OrderModule.html",[63,1.216,71,2.218]],["body/modules/OrderModule.html",[2,1.954,3,0.341,4,0.275,5,0.211,13,0.022,40,0.699,41,0.896,48,0.341,49,0.102,61,0.017,62,0.017,63,1.842,65,1.823,66,2.205,71,4.286,72,2.906,76,2.679,77,2.08,78,1.944,80,2.875,81,3.099,129,1.712,156,2.609,159,2.609,163,2.08,388,4.065,406,3.835,407,3.568,416,3.568,417,3.568,418,4.189,419,4.189,420,4.189,421,2.853,422,2.853]],["title/injectables/OrderService.html",[89,1.021,406,2.045]],["body/injectables/OrderService.html",[3,0.202,4,0.163,5,0.125,7,0.361,8,1.278,13,0.023,19,0.833,32,1.368,33,1.453,34,0.654,35,1.15,36,1.537,39,1.45,40,0.576,41,0.531,48,0.202,49,0.06,50,1.015,51,0.955,55,1.233,59,1.537,61,0.012,62,0.012,89,1.073,90,1.153,93,1.442,115,1.814,132,1.547,172,1.427,173,1.427,174,2.048,177,2.235,180,1.427,198,3.651,203,3.12,218,2.487,234,1.45,238,5.099,240,2.116,241,3.187,249,2.045,262,1.324,263,1.692,376,2.487,381,1.858,390,2.487,391,1.858,400,1.858,404,1.233,405,2.116,406,2.149,423,2.116,424,2.484,425,3.742,426,2.484,427,3.742,428,2.484,429,2.484,430,1.427,431,1.427,432,1.692,433,3.066,434,2.484,435,3.742,436,2.484,437,2.484,438,2.484,439,2.484,440,2.484,441,2.484,442,2.484,443,5.575,444,1.692,445,2.484,446,2.484,447,2.484,448,2.116]],["title/modules/PrismaModule.html",[63,1.216,72,1.549]],["body/modules/PrismaModule.html",[3,0.371,4,0.298,5,0.23,13,0.022,40,0.609,41,0.973,48,0.371,49,0.111,61,0.018,62,0.018,63,1.941,65,1.979,66,2.323,72,3.011,76,2.822,77,2.258,78,2.111,80,3.029,174,2.934,449,3.874,450,3.874,451,3.874,452,4.548,453,5.685,454,4.548]],["title/injectables/PrismaService.html",[89,1.021,174,1.455]],["body/injectables/PrismaService.html",[3,0.339,4,0.273,5,0.21,7,0.604,8,1.834,13,0.023,19,0.894,32,1.264,33,1.002,34,0.604,35,1.063,39,1.73,40,0.575,41,0.89,48,0.339,49,0.101,61,0.017,62,0.017,89,1.541,90,1.931,132,2.591,171,3.614,174,2.195,185,2.862,347,3.346,455,3.544,456,5.067,457,5.372,458,6.666,459,5.372,460,6.287,461,4.161,462,3.544,463,4.161,464,4.161,465,4.161,466,4.161,467,4.161]],["title/classes/Product.html",[49,0.087,381,1.768]],["body/classes/Product.html",[3,0.333,4,0.268,5,0.206,7,0.594,13,0.022,19,1.124,33,1.421,34,0.981,35,1.695,36,2.015,48,0.333,49,0.099,61,0.016,62,0.016,93,1.749,199,1.317,202,1.814,218,2.638,249,2.137,262,3.144,263,4.019,375,3.676,377,4.019,378,3.891,381,2.638,468,3.484,469,4.091,470,4.091,471,4.091,472,4.091,473,4.091,474,4.091,475,4.091]],["title/controllers/ProductController.html",[0,1.29,476,2.425]],["body/controllers/ProductController.html",[0,0.946,2,0.946,3,0.213,4,0.171,5,0.132,7,0.379,8,1.326,12,1.988,13,0.023,14,1.779,15,2.646,19,0.913,26,3.814,32,1.561,33,1.237,34,0.746,35,1.312,39,1.768,40,0.638,41,0.559,42,3.305,43,1.5,48,0.213,49,0.064,50,1.067,51,1.004,52,1.627,53,3.153,59,1.754,61,0.012,62,0.012,93,1.598,101,1.627,122,2.231,123,1.779,124,1.779,125,2.42,126,1.627,128,1.627,129,1.067,130,2.42,131,0.841,147,1.627,196,2.153,209,2.646,212,3.309,234,1.251,236,2.646,244,4.617,249,2.217,260,3.305,368,2.42,381,1.297,390,2.55,391,1.929,393,1.779,394,2.646,396,2.646,397,2.929,400,1.297,401,1.969,404,1.297,413,1.779,414,1.779,476,2.646,477,2.225,478,1.803,479,2.612,480,2.612,481,1.5,482,2.225,483,2.929,484,2.612,485,1.969,486,2.612,487,3.309,488,2.612,489,1.5,490,3.814,491,2.225,492,2.929,493,2.612,494,1.969,495,2.664,496,2.225,497,1.5,498,2.225,499,2.612,500,2.612,501,1.969,502,2.612,503,2.612,504,2.612,505,1.969,506,1.969,507,2.612,508,1.969,509,1.969,510,1.969,511,2.612]],["title/modules/ProductModule.html",[63,1.216,73,2.218]],["body/modules/ProductModule.html",[2,1.954,3,0.341,4,0.275,5,0.211,13,0.022,40,0.699,41,0.896,48,0.341,49,0.102,61,0.017,62,0.017,63,1.842,65,1.823,66,2.205,72,2.906,73,4.286,76,2.679,77,2.08,78,1.944,80,2.875,81,3.099,129,1.712,156,2.609,159,2.609,163,2.08,421,2.853,422,2.853,476,4.065,495,3.835,496,3.568,512,3.568,513,4.189,514,3.568,515,4.189,516,4.189]],["title/injectables/ProductService.html",[89,1.021,495,2.045]],["body/injectables/ProductService.html",[3,0.208,4,0.167,5,0.129,7,0.371,8,1.303,13,0.023,19,0.984,32,1.734,33,1.374,34,0.829,35,1.457,39,1.837,40,0.611,41,0.546,48,0.208,49,0.062,50,1.043,51,0.981,55,2.271,59,1.856,61,0.012,62,0.012,89,1.095,90,1.184,93,1.663,113,3.636,171,3.569,172,1.466,173,1.466,174,2.075,177,1.895,180,1.466,185,2.705,187,1.589,188,1.184,196,1.772,234,1.23,236,2.6,249,2.202,260,2.916,357,1.738,381,1.895,390,2.521,391,1.895,400,1.895,404,1.267,430,1.466,431,1.466,432,1.738,433,3.458,444,2.6,478,2.123,481,2.193,489,2.193,490,3.163,495,2.193,497,1.466,517,2.173,518,2.879,519,2.552,520,2.6,521,2.552,522,3.886,523,2.552,524,2.552,525,2.879,526,2.552,527,2.552,528,2.552,529,1.924,530,2.552,531,2.552,532,3.449,533,2.552,534,2.173,535,1.924,536,3.449,537,2.552,538,1.924,539,2.552,540,2.552]],["title/classes/Table.html",[49,0.087,376,1.768]],["body/classes/Table.html",[3,0.366,4,0.295,5,0.227,7,0.653,13,0.022,19,1.076,34,0.94,35,1.737,48,0.366,49,0.109,61,0.018,62,0.018,93,1.442,199,1.449,202,1.927,218,3.309,249,2.234,375,3.843,376,2.803,377,4.202,378,4.03,541,3.831,542,4.498,543,4.498,544,4.498,545,4.498]],["title/controllers/TableController.html",[0,1.29,546,2.425]],["body/controllers/TableController.html",[0,0.909,2,0.909,3,0.204,4,0.165,5,0.127,7,0.364,8,1.287,12,1.955,13,0.023,14,1.709,19,0.898,22,5.154,32,1.53,33,1.213,34,0.731,35,1.286,39,1.738,40,0.663,41,0.537,42,3.256,43,1.442,48,0.204,49,0.061,50,1.026,51,0.965,52,1.563,53,3.1,59,1.719,61,0.012,62,0.012,93,1.581,101,1.563,113,3.475,122,2.166,123,1.709,124,1.709,125,2.349,126,1.563,127,2.138,128,1.563,129,1.026,130,2.349,131,0.808,147,1.563,196,2.102,221,4.563,234,1.214,249,2.283,289,2.892,368,3.136,376,1.872,390,2.5,391,1.872,393,1.709,394,2.568,396,3.43,400,1.246,401,1.893,404,1.246,413,1.709,414,1.709,478,1.75,481,1.442,482,2.138,483,2.843,485,1.893,487,3.212,489,1.442,491,2.138,492,2.843,494,1.893,497,1.442,498,2.138,501,1.893,505,1.893,506,1.893,508,1.893,509,1.893,510,1.893,520,1.709,522,3.862,546,2.568,547,2.138,548,2.51,549,2.51,550,3.771,551,3.771,552,2.51,553,2.51,554,3.136,555,2.51,556,2.843,557,2.138,558,2.601,559,2.138,560,2.51,561,2.51,562,2.51,563,2.51,564,2.51,565,2.51,566,2.51]],["title/modules/TableModule.html",[63,1.216,74,2.218]],["body/modules/TableModule.html",[2,1.954,3,0.341,4,0.275,5,0.211,13,0.022,40,0.699,41,0.896,48,0.341,49,0.102,61,0.017,62,0.017,63,1.842,65,1.823,66,2.205,72,2.906,74,4.286,76,2.679,77,2.08,78,1.944,80,2.875,81,3.099,129,1.712,156,2.609,159,2.609,163,2.08,421,2.853,422,2.853,546,4.065,558,3.835,559,3.568,567,3.568,568,4.189,569,3.568,570,4.189,571,4.189]],["title/injectables/TableService.html",[89,1.021,558,2.045]],["body/injectables/TableService.html",[3,0.209,4,0.168,5,0.13,7,0.373,8,1.31,13,0.023,19,0.986,32,1.738,33,1.377,34,0.83,35,1.46,39,1.842,40,0.612,41,0.549,48,0.209,49,0.062,50,1.05,51,0.987,55,2.28,59,1.861,61,0.012,62,0.012,89,1.1,90,1.192,93,1.665,113,3.642,171,3.473,172,1.475,173,1.475,174,2.082,177,1.904,180,1.475,185,2.714,187,1.599,188,1.192,196,1.781,234,1.235,249,2.206,289,2.925,357,1.749,376,1.904,390,2.529,391,1.904,400,1.904,404,1.275,430,1.475,431,1.475,432,1.749,433,3.469,444,2.613,478,2.131,481,2.203,489,2.203,497,1.475,518,2.893,520,2.613,522,3.895,525,2.893,529,1.936,532,3.462,534,2.187,535,1.936,536,3.462,538,1.936,554,3.172,556,2.893,557,2.187,558,2.203,572,2.187,573,2.568,574,2.568,575,2.568,576,2.568,577,2.568,578,2.568,579,2.568,580,2.568,581,2.568,582,2.568,583,2.568,584,2.568]],["title/classes/UpdateProductDto.html",[49,0.087,490,2.218]],["body/classes/UpdateProductDto.html",[3,0.415,4,0.334,5,0.257,13,0.022,40,0.653,48,0.415,49,0.124,61,0.019,62,0.019,131,1.642,199,1.642,234,1.642,236,3.473,239,3.473,260,2.929,347,3.176,490,3.797,585,4.343,586,3.845,587,5.099]],["title/classes/UpdateTableDto.html",[49,0.087,554,2.218]],["body/classes/UpdateTableDto.html",[3,0.415,4,0.334,5,0.257,13,0.022,40,0.653,48,0.415,49,0.124,61,0.019,62,0.019,131,1.642,199,1.642,234,1.642,289,2.929,291,3.845,347,3.176,554,3.797,556,3.845,586,3.845,588,4.343,589,5.099]],["title/classes/UpdateUserDto.html",[49,0.087,590,2.218]],["body/classes/UpdateUserDto.html",[3,0.415,4,0.334,5,0.257,13,0.022,40,0.653,48,0.415,49,0.124,61,0.019,62,0.019,131,1.642,199,1.642,234,1.642,295,2.929,297,3.845,347,3.176,586,3.845,590,3.797,591,4.343,592,3.845,593,5.099]],["title/classes/User.html",[49,0.087,115,1.29]],["body/classes/User.html",[3,0.333,4,0.268,5,0.206,7,0.594,13,0.022,19,1.124,33,1.421,34,0.981,35,1.695,48,0.333,49,0.099,61,0.016,62,0.016,93,1.783,115,1.924,183,3.144,184,3.389,199,1.317,202,1.814,249,2.137,262,3.144,375,3.676,378,3.891,594,3.484,595,5.901,596,4.091,597,4.091,598,4.091,599,4.091,600,4.091,601,4.091,602,4.091]],["title/controllers/UserController.html",[0,1.29,603,2.425]],["body/controllers/UserController.html",[0,0.926,2,0.926,3,0.208,4,0.168,5,0.129,7,0.371,8,1.306,12,1.971,13,0.023,15,2.604,19,0.905,26,3.556,32,1.545,33,1.224,34,0.738,35,1.298,39,1.752,40,0.611,41,0.547,42,3.279,43,1.469,48,0.208,49,0.062,50,1.045,51,0.983,52,1.593,53,3.125,59,1.735,61,0.012,62,0.012,93,1.589,101,1.593,115,0.926,118,3.945,122,2.196,123,1.742,124,1.742,125,2.382,126,1.593,128,1.593,129,1.045,130,3.389,131,0.824,147,3.166,196,2.126,209,2.604,234,1.231,249,2.359,295,3.279,319,4.329,368,3.556,390,2.523,391,1.898,393,1.742,394,2.604,396,2.604,397,2.883,400,1.27,404,1.27,413,1.742,414,1.742,478,1.775,481,1.469,483,2.883,485,1.928,489,1.469,492,2.883,494,1.928,497,1.469,501,1.928,505,1.928,506,1.928,508,1.928,509,1.928,510,1.928,590,3.79,592,2.883,603,2.604,604,2.178,605,2.557,606,2.557,607,2.557,608,2.557,609,2.557,610,2.557,611,2.557,612,2.557,613,2.557,614,2.557,615,2.631,616,2.178,617,2.557,618,2.557,619,2.557,620,2.557,621,2.557,622,2.557,623,2.557]],["title/modules/UserModule.html",[63,1.216,75,2.218]],["body/modules/UserModule.html",[2,1.954,3,0.341,4,0.275,5,0.211,13,0.022,40,0.699,41,0.896,48,0.341,49,0.102,61,0.017,62,0.017,63,1.842,65,1.823,66,2.205,72,2.906,75,4.286,76,2.679,77,2.08,78,1.944,80,2.875,81,3.099,129,1.712,156,2.609,159,2.609,163,2.08,421,2.853,422,2.853,603,4.065,615,3.835,616,3.568,624,3.568,625,4.189,626,3.568,627,4.189,628,4.189]],["title/injectables/UserService.html",[89,1.021,615,2.045]],["body/injectables/UserService.html",[3,0.168,4,0.135,5,0.104,7,0.299,8,1.106,13,0.023,19,0.945,29,1.554,32,1.592,33,1.368,34,0.796,35,1.338,39,1.688,40,0.587,41,0.441,48,0.168,49,0.05,50,0.842,51,0.792,55,1.988,59,1.685,61,0.01,62,0.01,89,0.929,90,0.957,93,1.582,113,3.433,115,1.174,117,1.554,171,3.426,172,1.184,173,1.184,174,1.855,177,1.609,180,1.184,181,2.443,182,3.02,183,1.726,184,2.3,185,2.792,186,1.554,187,2.494,188,1.859,196,2.107,202,1.106,234,1.29,238,4.672,249,2.207,262,1.726,295,2.607,353,2.76,357,2.727,375,2.018,377,2.207,390,2.254,391,1.609,400,1.609,404,1.023,430,1.184,431,1.184,432,1.404,433,3.092,443,3.867,444,2.207,478,1.859,481,1.861,489,1.861,497,1.184,518,2.443,520,2.207,522,3.569,525,2.443,529,1.554,532,3.02,535,1.554,536,3.02,538,1.554,590,2.827,592,2.443,615,1.861,629,1.755,630,4.005,631,2.061,632,2.061,633,2.061,634,2.061,635,2.061,636,2.061,637,2.061,638,2.061,639,1.755,640,1.755,641,2.061,642,2.061,643,2.061,644,2.061,645,2.061,646,4.54,647,2.061,648,4.005,649,4.54,650,3.241,651,3.241,652,3.241,653,3.241,654,3.241,655,2.061,656,2.443,657,3.241,658,3.241,659,2.061,660,2.061]],["title/changelog.html",[661,2.03,662,2.03,663,2.539]],["body/changelog.html",[4,0.241,5,0.263,13,0.014,30,1.542,61,0.009,62,0.009,78,0.84,188,1.356,224,1.356,234,0.583,378,2.289,478,1.356,656,2.771,663,5.324,664,2.922,665,3.942,666,3.181,667,1.81,668,3.13,669,2.922,670,3.675,671,1.81,672,1.81,673,2.489,674,4.218,675,1.542,676,1.81,677,3.675,678,1.542,679,5.747,680,1.81,681,1.542,682,1.81,683,3.181,684,1.81,685,4.218,686,1.81,687,1.81,688,1.81,689,1.81,690,6.087,691,1.81,692,3.13,693,1.81,694,1.81,695,2.922,696,1.81,697,1.81,698,3.13,699,2.922,700,2.922,701,3.675,702,2.922,703,1.81,704,2.922,705,6.69,706,1.81,707,1.81,708,1.81,709,1.81,710,2.922,711,1.81,712,2.922,713,1.81,714,2.922,715,1.81,716,2.922,717,1.81,718,1.81,719,1.81,720,1.81,721,1.81,722,1.81,723,1.81,724,2.922,725,2.922,726,1.81,727,1.81,728,1.81,729,1.81,730,1.81,731,1.81,732,1.81,733,1.81,734,1.81,735,1.81,736,1.81,737,1.81,738,4.95,739,3.13,740,1.542,741,1.81,742,3.942,743,5.42,744,1.81,745,2.922,746,1.81,747,1.81,748,1.81,749,2.922,750,1.81,751,1.81,752,1.81,753,1.81,754,3.675,755,2.922,756,2.922,757,2.922,758,1.81,759,1.81,760,1.81,761,1.81,762,1.81,763,3.675,764,3.675,765,2.922,766,1.542,767,2.922,768,2.922,769,1.542,770,1.81,771,2.922,772,1.542,773,1.81,774,2.922,775,4.616,776,4.95,777,1.81,778,2.922,779,1.81,780,2.489,781,1.81,782,4.629,783,3.675,784,1.542,785,1.81,786,1.81,787,1.81,788,1.81,789,2.922,790,1.81,791,1.81,792,2.489,793,1.81,794,1.81,795,2.771,796,1.81,797,1.542,798,1.81,799,1.81,800,1.81,801,1.81,802,1.81,803,1.81,804,1.81,805,1.542,806,1.81,807,1.81,808,2.922,809,1.81,810,1.81,811,1.81,812,4.218,813,1.81,814,1.81,815,1.542,816,1.81,817,1.81,818,1.81,819,1.81,820,1.81,821,1.81,822,1.81,823,2.922,824,1.81,825,1.81,826,2.922,827,1.81,828,1.81,829,1.81,830,1.81,831,1.81,832,1.542,833,1.81,834,2.922,835,1.81,836,1.81,837,1.81,838,1.81,839,1.81,840,4.95,841,1.81,842,2.922,843,1.81,844,3.675,845,3.675,846,1.81,847,2.922,848,1.81,849,1.81,850,1.81,851,1.542,852,1.81,853,1.81,854,1.81,855,1.81,856,2.922,857,1.81,858,2.922,859,1.542,860,1.81,861,1.81,862,1.81,863,1.81,864,1.81,865,1.81,866,1.81,867,1.81,868,2.922,869,1.81,870,2.922,871,1.81,872,1.81,873,1.81,874,1.81,875,1.81,876,1.81,877,1.81,878,1.81,879,1.81,880,1.81,881,1.81,882,1.81,883,1.81,884,1.81,885,1.81,886,1.81,887,1.81,888,1.542,889,1.81,890,1.81,891,1.81,892,1.81,893,1.81,894,1.81,895,1.81,896,1.81,897,1.542,898,1.81,899,1.81,900,1.81,901,1.81,902,1.81,903,1.81,904,1.81,905,1.542,906,2.489,907,1.81,908,1.81,909,1.81,910,1.81,911,1.81,912,1.81]],["title/contributing.html",[661,2.03,662,2.03,913,2.539]],["body/contributing.html",[5,0.111,11,3.538,13,0.011,19,0.364,24,1.492,32,0.666,61,0.011,62,0.011,66,0.895,122,1.258,182,2.562,188,1.577,448,3.546,478,1.017,665,1.865,666,4.805,673,1.865,681,2.894,683,3.14,692,1.865,740,2.894,742,2.894,766,2.894,769,2.894,772,2.894,780,1.865,792,1.865,795,1.652,797,1.865,805,1.865,815,2.894,832,1.865,851,1.865,905,1.865,906,3.997,913,2.894,914,2.894,915,3.546,916,1.865,917,2.19,918,2.19,919,3.398,920,2.19,921,3.398,922,2.19,923,2.19,924,3.398,925,5.608,926,5.608,927,3.398,928,2.19,929,4.164,930,2.19,931,2.19,932,2.19,933,3.398,934,2.19,935,2.19,936,2.19,937,3.398,938,3.398,939,2.19,940,2.19,941,4.164,942,1.652,943,2.19,944,2.19,945,2.19,946,2.19,947,2.19,948,2.19,949,2.19,950,2.19,951,2.19,952,2.19,953,2.19,954,2.19,955,2.19,956,2.19,957,3.398,958,2.19,959,2.19,960,3.398,961,2.19,962,2.19,963,3.398,964,2.19,965,5.079,966,2.19,967,5.079,968,3.398,969,2.19,970,3.398,971,2.19,972,2.19,973,2.19,974,2.19,975,2.19,976,2.19,977,2.19,978,2.19,979,2.19,980,2.19,981,3.398,982,2.19,983,2.19,984,2.19,985,3.398,986,2.19,987,3.398,988,5.079,989,2.19,990,2.19,991,2.19,992,2.19,993,3.398,994,2.19,995,2.19,996,2.19,997,2.19,998,2.19,999,2.19,1000,2.19,1001,2.19,1002,2.19,1003,2.19,1004,2.19,1005,2.19,1006,2.19,1007,2.19,1008,3.398,1009,4.164,1010,2.19,1011,2.19,1012,2.19,1013,2.19,1014,2.19,1015,2.19,1016,2.19,1017,2.19,1018,3.398,1019,2.19,1020,2.19,1021,3.398,1022,2.19,1023,2.19,1024,2.19,1025,2.19,1026,2.19,1027,2.19,1028,4.164,1029,2.19,1030,2.19,1031,2.19,1032,2.19,1033,3.398,1034,2.19,1035,2.19,1036,2.19,1037,2.19,1038,2.19,1039,2.19,1040,2.19,1041,2.19,1042,3.398,1043,2.19,1044,2.19,1045,2.19,1046,3.398,1047,3.398,1048,2.19,1049,2.19,1050,2.19,1051,2.19,1052,2.19,1053,2.19,1054,2.19,1055,2.19,1056,2.19,1057,2.19,1058,2.19,1059,2.19,1060,2.19,1061,3.398,1062,2.19,1063,2.19,1064,2.19,1065,2.19,1066,2.19,1067,2.19,1068,2.19,1069,2.19,1070,3.398,1071,2.19,1072,3.398,1073,3.398,1074,2.19,1075,2.19,1076,2.19,1077,2.19,1078,2.19,1079,2.19,1080,2.19,1081,2.19,1082,2.19,1083,2.19,1084,2.19,1085,2.19,1086,3.398,1087,2.19,1088,2.19,1089,2.19,1090,2.19,1091,2.19,1092,3.398,1093,2.19,1094,2.19,1095,2.19,1096,2.19,1097,2.19,1098,2.19,1099,2.19,1100,2.19,1101,2.19,1102,2.19,1103,2.19,1104,2.19,1105,2.19,1106,2.19,1107,2.19,1108,2.19,1109,2.19,1110,2.19,1111,2.19,1112,2.19,1113,2.19,1114,2.19,1115,2.19,1116,2.19,1117,2.19,1118,2.19,1119,2.19,1120,2.19,1121,2.19,1122,2.19,1123,2.19,1124,2.19,1125,2.19,1126,2.19]],["title/coverage.html",[1127,3.654]],["body/coverage.html",[0,2.069,1,1.745,5,0.129,6,2.183,13,0.022,34,0.372,45,1.472,49,0.162,61,0.012,62,0.012,89,1.746,91,2.183,99,1.745,100,2.183,106,1.596,115,1.387,133,1.472,135,1.745,138,1.596,153,1.596,170,2.183,174,1.047,177,1.272,188,1.189,198,1.596,200,2.888,201,2.183,203,1.596,205,1.745,235,2.2,239,3.124,260,1.472,261,2.183,289,1.472,290,2.183,291,2.888,295,1.472,296,2.183,297,2.888,334,2.183,360,2.183,365,2.183,366,2.183,374,2.183,376,2.277,381,1.901,388,1.745,389,2.183,403,1.932,406,1.472,423,2.183,430,1.472,431,1.472,455,2.183,468,2.183,476,1.745,477,2.183,490,1.596,495,1.472,517,2.183,541,2.183,546,1.745,547,2.183,554,1.596,558,1.472,572,2.183,585,2.183,588,2.183,590,1.596,591,2.183,594,2.183,603,1.745,604,2.183,615,1.472,629,2.183,859,3.262,1127,1.932,1128,2.563,1129,2.563,1130,2.563,1131,2.563,1132,2.563,1133,7.207,1134,3.83,1135,5.922,1136,2.183,1137,6.225,1138,6.649,1139,2.183,1140,2.183,1141,3.83,1142,2.563,1143,4.586,1144,3.262,1145,2.183,1146,3.262,1147,3.262,1148,2.183,1149,3.262,1150,3.262,1151,3.262,1152,3.262,1153,2.183,1154,5.088,1155,5.088,1156,2.563,1157,2.183,1158,2.563]],["title/dependencies.html",[66,1.749,1159,2.539]],["body/dependencies.html",[13,0.023,38,4.753,41,0.944,49,0.136,61,0.017,62,0.017,66,1.805,129,1.805,131,1.422,132,2.751,158,3.33,163,2.193,181,3.33,228,3.762,233,2.353,346,5.211,675,3.762,1160,6.118,1161,4.417,1162,4.417,1163,4.417,1164,4.417,1165,4.417,1166,4.417,1167,4.417,1168,4.417,1169,4.417,1170,4.417,1171,4.417,1172,4.417,1173,4.417,1174,4.417,1175,4.417,1176,4.417,1177,4.417,1178,4.417,1179,4.417,1180,4.417,1181,4.417,1182,4.417,1183,4.417]],["title/miscellaneous/functions.html",[1184,2.03,1185,3.645]],["body/miscellaneous/functions.html",[7,0.734,13,0.021,32,1.537,33,1.218,34,0.734,35,1.291,39,1.628,61,0.019,62,0.019,216,4.307,430,3.484,431,2.904,1139,4.307,1140,5.535,1157,5.166,1184,3.444,1185,4.307,1186,5.057,1187,5.057,1188,5.057,1189,6.066,1190,5.057]],["title/index.html",[7,0.433,661,2.03,662,2.03]],["body/index.html",[4,0.26,13,0.022,36,1.356,61,0.016,62,0.016,96,3.382,462,3.382,666,2.994,739,3.382,795,2.994,914,3.382,915,3.382,1127,2.994,1191,3.971,1192,3.971,1193,5.212,1194,3.971,1195,3.971,1196,3.971,1197,3.971,1198,3.971,1199,5.817,1200,3.971,1201,3.971,1202,3.971,1203,6.708,1204,3.971,1205,3.971,1206,6.582,1207,3.971,1208,5.212,1209,3.971,1210,3.971,1211,3.971,1212,3.971,1213,5.212,1214,5.212,1215,3.971,1216,3.971,1217,3.971,1218,5.212,1219,5.212,1220,3.971,1221,3.971,1222,3.971,1223,3.382,1224,3.971,1225,3.971,1226,3.971,1227,3.971,1228,3.971,1229,3.971,1230,3.971,1231,3.971,1232,3.971,1233,3.382,1234,3.971,1235,3.971,1236,3.382,1237,3.971,1238,3.971,1239,3.971,1240,3.382]],["title/modules.html",[65,2.108]],["body/modules.html",[13,0.018,61,0.018,62,0.018,64,3.307,65,2.113,70,3.024,71,3.024,72,2.113,73,3.024,74,3.024,75,3.024,1223,5.976,1241,7.016,1242,7.016,1243,7.016]],["title/overview.html",[1244,4.127]],["body/overview.html",[2,1.234,13,0.022,45,3.091,61,0.015,62,0.015,64,4.794,65,1.482,66,1.921,67,2.901,68,2.901,69,2.901,70,4.154,71,4.017,72,2.967,73,4.017,74,4.017,75,4.017,76,2.333,77,1.691,78,1.581,90,1.581,133,3.091,150,2.901,152,2.901,153,3.352,174,2.636,199,1.097,406,3.091,416,2.901,417,2.901,449,2.901,450,2.901,451,2.901,495,3.091,512,2.901,514,2.901,558,3.091,567,2.901,569,2.901,615,3.091,624,2.901,626,2.901,1244,2.901,1245,3.406,1246,3.406,1247,3.406,1248,3.406]],["title/properties.html",[202,1.461,1159,2.539]],["body/properties.html",[13,0.022,36,1.841,61,0.02,62,0.02,202,1.841,683,4.066,888,4.592,1233,4.592,1240,4.592,1249,5.392]],["title/todo.html",[661,2.03,662,2.03,1250,2.539]],["body/todo.html",[5,0.243,13,0.02,36,1.645,61,0.018,62,0.018,224,2.734,234,1.551,668,4.103,678,4.103,698,4.103,775,4.103,784,4.103,897,4.103,916,4.103,1236,4.103,1250,4.103,1251,6.363,1252,4.817,1253,4.817,1254,4.817,1255,4.817,1256,5.89,1257,4.817,1258,4.817,1259,4.817,1260,4.817,1261,4.817,1262,4.817,1263,4.817,1264,4.817,1265,4.817,1266,4.817,1267,4.817,1268,4.817,1269,4.817,1270,4.817]],["title/miscellaneous/variables.html",[942,3.227,1184,2.03]],["body/miscellaneous/variables.html",[7,0.367,11,1.904,13,0.023,24,3.096,28,2.611,33,1.304,34,0.66,36,1.552,55,2.687,59,0.862,61,0.012,62,0.012,115,1.829,135,2.58,171,2.422,177,2.687,183,2.018,184,2.176,185,2.691,188,1.172,196,1.172,203,2.36,218,2.508,225,1.72,234,1.464,262,2.691,263,3.096,265,3.872,266,4.302,267,3.872,268,3.872,269,3.872,270,3.872,271,3.872,275,3.872,278,3.872,287,2.151,288,3.872,304,1.904,307,2.151,308,2.151,309,2.151,310,2.151,311,2.151,316,2.151,320,1.904,376,1.881,381,1.881,403,1.904,456,4.302,478,2.11,639,5.281,640,5.281,656,1.904,942,1.904,1136,3.227,1144,2.151,1145,3.227,1146,2.151,1147,3.872,1148,3.227,1149,2.151,1150,3.872,1151,2.151,1152,3.872,1153,3.227,1184,1.72,1271,2.526,1272,3.788,1273,3.788,1274,3.788,1275,3.788,1276,2.526,1277,2.526,1278,2.526,1279,2.526,1280,2.526,1281,2.526,1282,2.526,1283,5.683,1284,2.526,1285,2.526,1286,2.526,1287,2.526,1288,2.526,1289,2.526,1290,2.526,1291,2.526,1292,2.526,1293,2.526,1294,2.526,1295,2.526,1296,2.526,1297,2.526,1298,2.526,1299,2.526]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":888,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.0.2",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":784,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["05",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":675,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1123,"title":{},"body":{"contributing.html":{}}}],["1/2",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":656,"title":{},"body":{"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.2",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1248,"title":{},"body":{"overview.html":{}}}],["16",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["1d",{"_index":1262,"title":{},"body":{"todo.html":{}}}],["2",{"_index":287,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":678,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["2014",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["2015",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":1260,"title":{},"body":{"todo.html":{}}}],["24h",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["345",{"_index":1269,"title":{},"body":{"todo.html":{}}}],["3d",{"_index":1257,"title":{},"body":{"todo.html":{}}}],["4.0.1",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["4.9.0",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["4415",{"_index":252,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5.1.0",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":282,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["56.0",{"_index":288,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":1246,"title":{},"body":{"overview.html":{}}}],["6.1.4",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1245,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1247,"title":{},"body":{"overview.html":{}}}],["8412",{"_index":251,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["8601",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["_count",{"_index":446,"title":{},"body":{"injectables/OrderService.html":{}}}],["abcd@1234",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["abusive",{"_index":1087,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1039,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1000,"title":{},"body":{"contributing.html":{}}}],["account",{"_index":1078,"title":{},"body":{"contributing.html":{}}}],["aciek",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["acting",{"_index":1079,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1045,"title":{},"body":{"contributing.html":{}}}],["ada34d69",{"_index":250,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["adapted",{"_index":1121,"title":{},"body":{"contributing.html":{}}}],["added",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["address",{"_index":1028,"title":{},"body":{"contributing.html":{}}}],["adheres",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["advances",{"_index":1015,"title":{},"body":{"contributing.html":{}}}],["against",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":973,"title":{},"body":{"contributing.html":{}}}],["aishek",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["aligned",{"_index":1057,"title":{},"body":{"contributing.html":{}}}],["amazing",{"_index":1224,"title":{},"body":{"index.html":{}}}],["amielucha",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["answer",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["answers",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["apenas",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["api",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":499,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":560,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":617,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":462,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":467,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appearance",{"_index":982,"title":{},"body":{"contributing.html":{}}}],["applications",{"_index":1198,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1068,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointed",{"_index":1080,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1042,"title":{},"body":{"contributing.html":{}}}],["appservice",{"_index":45,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argument",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["art4",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["asked",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["assume",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attacks",{"_index":1020,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1014,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1120,"title":{},"body":{"contributing.html":{}}}],["autenticado",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":99,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":70,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1233,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["authservice",{"_index":133,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1124,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["azkidenz",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["b888",{"_index":253,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["backers",{"_index":1225,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["ban",{"_index":1058,"title":{},"body":{"contributing.html":{}}}],["based",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["baseurl",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["basic",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":924,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":988,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1062,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":994,"title":{},"body":{"contributing.html":{}}}],["benefit",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["best",{"_index":1004,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"contributing.html":{}}}],["bootstrap",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":797,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["br",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["brazilian",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["brits",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1243,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1241,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1263,"title":{},"body":{"todo.html":{}}}],["build",{"_index":933,"title":{},"body":{"contributing.html":{}}}],["building",{"_index":1194,"title":{},"body":{"index.html":{}}}],["calabresa",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["can’t",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["care",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["catch(handleerror",{"_index":444,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["cebola",{"_index":246,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["cereja",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":742,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":663,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelogs",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":665,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["chinese",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["chronological",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":1100,"title":{},"body":{"contributing.html":{}}}],["clarified",{"_index":832,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["clarify",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["clarifying",{"_index":1038,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":49,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["closed",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":416,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":418,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":417,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":449,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":451,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":450,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":512,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":513,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":514,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":567,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":568,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":569,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":624,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":625,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":626,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cname",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":925,"title":{},"body":{"contributing.html":{}}}],["com",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"injectables/UserService.html":{}}}],["comments",{"_index":1018,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["commits",{"_index":1052,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["community",{"_index":967,"title":{},"body":{"contributing.html":{}}}],["comparison",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["complaints",{"_index":1094,"title":{},"body":{"contributing.html":{}}}],["conduct",{"_index":926,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1103,"title":{},"body":{"contributing.html":{}}}],["confirmação",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":435,"title":{},"body":{"injectables/OrderService.html":{}}}],["considered",{"_index":1032,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructive",{"_index":1001,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["contacting",{"_index":1091,"title":{},"body":{"contributing.html":{}}}],["contained",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["container",{"_index":947,"title":{},"body":{"contributing.html":{}}}],["contains",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":1254,"title":{},"body":{"todo.html":{}}}],["contributes",{"_index":989,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":913,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1056,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1061,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":964,"title":{},"body":{"contributing.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":500,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":561,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":618,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["corrective",{"_index":1044,"title":{},"body":{"contributing.html":{}}}],["counter",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["covenant",{"_index":1122,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1126,"title":{},"body":{"contributing.html":{}}}],["coverage",{"_index":1127,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":234,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":479,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createuserdto",{"_index":605,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":520,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":392,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":425,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":375,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":437,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":198,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderdto.products.map((createorderproductdto",{"_index":438,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto.tablenumber",{"_index":436,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto",{"_index":205,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createorderproductdto.description",{"_index":441,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":439,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":440,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator((_",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":260,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":289,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":295,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":990,"title":{},"body":{"contributing.html":{}}}],["criar",{"_index":394,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["criticism",{"_index":1002,"title":{},"body":{"contributing.html":{}}}],["croatian",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["cry",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["czech",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":371,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":433,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":378,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"changelog.html":{}}}],["dates",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["deem",{"_index":1063,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1098,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":639,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":422,"title":{},"body":{"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"contributing.html":{}}}],["delete",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":508,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":482,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["delete(':id')@useguards(undefined)@apibearerauth()@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":607,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":510,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":481,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecations",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":264,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["details",{"_index":938,"title":{},"body":{"contributing.html":{}}}],["determined",{"_index":1117,"title":{},"body":{"contributing.html":{}}}],["deve",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["developers",{"_index":956,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1205,"title":{},"body":{"index.html":{}}}],["diff",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["differentiate",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["differing",{"_index":996,"title":{},"body":{"contributing.html":{}}}],["diffs",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["disability",{"_index":975,"title":{},"body":{"contributing.html":{}}}],["discuss",{"_index":917,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["documented",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":936,"title":{},"body":{"contributing.html":{}}}],["domain",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["done",{"_index":1270,"title":{},"body":{"todo.html":{}}}],["dos",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto",{"_index":522,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":404,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/logged",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/login",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":497,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateProductDto.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["e/ou",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":1215,"title":{},"body":{"index.html":{}}}],["each",{"_index":237,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["edit",{"_index":1050,"title":{},"body":{"contributing.html":{}}}],["editar",{"_index":492,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["edits",{"_index":1054,"title":{},"body":{"contributing.html":{}}}],["efficient",{"_index":1195,"title":{},"body":{"index.html":{}}}],["electronic",{"_index":1027,"title":{},"body":{"contributing.html":{}}}],["email",{"_index":921,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1006,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["enableshutdownhooks",{"_index":457,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":459,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["encourage",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":934,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1111,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1086,"title":{},"body":{"contributing.html":{}}}],["english",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["ensure",{"_index":931,"title":{},"body":{"contributing.html":{}}}],["entities/product.entity",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/table.entity",{"_index":557,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["environment",{"_index":941,"title":{},"body":{"contributing.html":{}}}],["equally",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":1190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":1189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":432,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["est",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{}}}],["estão",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ethnicity",{"_index":976,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":1084,"title":{},"body":{"contributing.html":{}}}],["everyone",{"_index":971,"title":{},"body":{"contributing.html":{}}}],["evolving",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"changelog.html":{},"todo.html":{}}}],["examples",{"_index":906,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["exclusionary",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["executioncontext",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exibição",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["existe",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expected",{"_index":1040,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":970,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":998,"title":{},"body":{"contributing.html":{}}}],["expiresin",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["explanation",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":1030,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":453,"title":{},"body":{"modules/PrismaModule.html":{}}}],["exposed",{"_index":943,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["expression",{"_index":978,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuawnrbmftzsi6ilbldhrlcnnvbkjyzxnvbgluiiwiawf0ijoxnjc2njc2njq4lcjlehaioje2nzy3njmwndh9.twp8si_ui_z0ut_ii00ecppymqerkkutwwy1bsy8iq4",{"_index":369,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["face",{"_index":1113,"title":{},"body":{"contributing.html":{}}}],["fair",{"_index":1043,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["feat",{"_index":1258,"title":{},"body":{"todo.html":{}}}],["ff4ff6cb4c95",{"_index":254,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"todo.html":{}}}],["files",{"_index":950,"title":{},"body":{"contributing.html":{}}}],["fina",{"_index":269,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":390,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":518,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":525,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":391,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":414,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":400,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["first",{"_index":916,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["fix",{"_index":775,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixed",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":1003,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":927,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["footnote",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":668,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["formatting",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["fostering",{"_index":962,"title":{},"body":{"contributing.html":{}}}],["fraca",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":1193,"title":{},"body":{"index.html":{}}}],["frango",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":969,"title":{},"body":{"contributing.html":{}}}],["french",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["frequently",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["fun",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":859,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["functions",{"_index":1185,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":766,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gather",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":977,"title":{},"body":{"contributing.html":{}}}],["gerado",{"_index":367,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["german",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["get(':id",{"_index":413,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["get(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":611,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":609,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":661,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["git",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":897,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["good",{"_index":905,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":999,"title":{},"body":{"contributing.html":{}}}],["grow",{"_index":1220,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["guiding",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["h4vry",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["hameds",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["handleerror",{"_index":430,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(err",{"_index":1188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["harassing",{"_index":1088,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":968,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1066,"title":{},"body":{"contributing.html":{}}}],["headings",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["help",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1230,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":1261,"title":{},"body":{"todo.html":{}}}],["hopefully",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["http://contributor",{"_index":1125,"title":{},"body":{"contributing.html":{}}}],["httpcode",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":509,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://i.imgur.com/hne75iw.png",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["https://lh3.googleusercontent.com/a/aedftp7_gye_zcl4tjfmtmp7f",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1237,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":249,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ideal",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["identifier",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":681,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["ids",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ignoreexpiration",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["iguais",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":262,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["imagem",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["imagery",{"_index":1012,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":464,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["improve",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1033,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1106,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":448,"title":{},"body":{"injectables/OrderService.html":{},"contributing.html":{}}}],["includes",{"_index":940,"title":{},"body":{"contributing.html":{}}}],["including",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["inclusive",{"_index":992,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":948,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1071,"title":{},"body":{"contributing.html":{}}}],["inestapplication",{"_index":460,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informadas",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["information",{"_index":1024,"title":{},"body":{"contributing.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["insert",{"_index":1093,"title":{},"body":{"contributing.html":{}}}],["install",{"_index":932,"title":{},"body":{"contributing.html":{}}}],["installation",{"_index":1202,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1204,"title":{},"body":{"index.html":{}}}],["instances",{"_index":1047,"title":{},"body":{"contributing.html":{}}}],["instead",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["insulting/derogatory",{"_index":1017,"title":{},"body":{"contributing.html":{}}}],["intentionally",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":928,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":961,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":939,"title":{},"body":{"contributing.html":{}}}],["investigated",{"_index":1096,"title":{},"body":{"contributing.html":{}}}],["inválidos",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":229,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":364,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":284,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":292,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["iso",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["ispositive",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isstring",{"_index":259,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":242,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":361,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issue",{"_index":920,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1055,"title":{},"body":{"contributing.html":{}}}],["isurl",{"_index":285,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":231,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":248,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["it's",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["italian",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["itens",{"_index":257,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["izss=s288",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["jane",{"_index":1264,"title":{},"body":{"todo.html":{}}}],["jira",{"_index":1268,"title":{},"body":{"todo.html":{}}}],["jkostolansky",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["john",{"_index":1259,"title":{},"body":{"todo.html":{}}}],["join",{"_index":1227,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":153,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1234,"title":{},"body":{"index.html":{}}}],["karalamalar",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["keep",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["keeping",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["korean",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["language",{"_index":993,"title":{},"body":{"contributing.html":{}}}],["latest",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["layer",{"_index":935,"title":{},"body":{"contributing.html":{}}}],["leadership",{"_index":1119,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["level",{"_index":979,"title":{},"body":{"contributing.html":{}}}],["license",{"_index":1240,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1219,"title":{},"body":{"index.html":{}}}],["link",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["lista",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["listar",{"_index":396,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["locations",{"_index":946,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["loggeduser",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":106,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":138,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logs",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["m",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["magol",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["mail",{"_index":1074,"title":{},"body":{"contributing.html":{}}}],["maintain",{"_index":1102,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":965,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":692,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["makes",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":815,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["markdown",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["massa",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["matches",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["media",{"_index":1077,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1008,"title":{},"body":{"contributing.html":{}}}],["mentioning",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["mentions",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["merge",{"_index":769,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["mesa",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesas",{"_index":551,"title":{},"body":{"controllers/TableController.html":{}}}],["message",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":922,"title":{},"body":{"contributing.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":1184,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1218,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1208,"title":{},"body":{"index.html":{}}}],["module",{"_index":63,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":65,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":1229,"title":{},"body":{"index.html":{}}}],["mpbzh",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["muito",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mussarela",{"_index":266,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":1235,"title":{},"body":{"index.html":{}}}],["name",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nationality",{"_index":980,"title":{},"body":{"contributing.html":{}}}],["navigation",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":1099,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["nest",{"_index":1199,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1239,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TableController.html":{}}}],["nestjs/common/decorators/core/injectable.decorator",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["nestjs/common/enums",{"_index":498,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["nestjs/core",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport/dist",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["nestjs/platform",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/swagger/dist",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["nestjs/swagger/dist/decorators",{"_index":294,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["new",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nico",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["node.js",{"_index":1192,"title":{},"body":{"index.html":{}}}],["noise",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["nome",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notable",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":851,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["notfoundexception",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`id",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{}}}],["notfoundexception(`registro",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["now",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1203,"title":{},"body":{"index.html":{}}}],["number",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":949,"title":{},"body":{"contributing.html":{}}}],["numero",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["não",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["o",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"injectables/UserService.html":{}}}],["obj",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.name",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.nickname",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.number",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["object.entries(seed",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(products",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(tables",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["obligated",{"_index":1101,"title":{},"body":{"contributing.html":{}}}],["observações",{"_index":243,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["obvious",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["occupy",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["offensive",{"_index":1065,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1073,"title":{},"body":{"contributing.html":{}}}],["offline",{"_index":1083,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":953,"title":{},"body":{"contributing.html":{}}}],["online",{"_index":1082,"title":{},"body":{"contributing.html":{}}}],["onmoduleinit",{"_index":458,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":795,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["optional",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":235,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["order.controller",{"_index":420,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":201,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:13",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:23",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":407,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":388,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordering",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["ordermodule",{"_index":71,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":406,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["orientation",{"_index":986,"title":{},"body":{"contributing.html":{}}}],["os",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["osadchyi",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["others",{"_index":1023,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1089,"title":{},"body":{"contributing.html":{}}}],["ou",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{}}}],["outdated",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["over",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1244,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":923,"title":{},"body":{"contributing.html":{}}}],["p",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":1159,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["para",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["param",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":538,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":586,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":587,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":589,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":593,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["participants",{"_index":1010,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":966,"title":{},"body":{"contributing.html":{}}}],["passport",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":421,"title":{},"body":{"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":494,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":505,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":491,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["patch(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":613,"title":{},"body":{"controllers/UserController.html":{}}}],["payload",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"controllers/OrderController.html":{}}}],["pedidos",{"_index":398,"title":{},"body":{"controllers/OrderController.html":{}}}],["pelo",{"_index":368,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["people",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["perfil",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["permanent",{"_index":1115,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1060,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":957,"title":{},"body":{"contributing.html":{}}}],["persian",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["personal",{"_index":981,"title":{},"body":{"contributing.html":{}}}],["pettbresolin",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["pettersonbresolin",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["phrasing",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["physical",{"_index":1026,"title":{},"body":{"contributing.html":{}}}],["pierceh89",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["pizza",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":915,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pledge",{"_index":960,"title":{},"body":{"contributing.html":{}}}],["podcast",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["policies",{"_index":1108,"title":{},"body":{"contributing.html":{}}}],["polish",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["political",{"_index":1019,"title":{},"body":{"contributing.html":{}}}],["ports",{"_index":944,"title":{},"body":{"contributing.html":{}}}],["portugese",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["portuguese",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["porx",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["positive",{"_index":991,"title":{},"body":{"contributing.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":393,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["posted",{"_index":1109,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1075,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["previous",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["preço",{"_index":281,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":263,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["principles",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.ordercreateinput",{"_index":434,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.product.upsert",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.productcreateinput",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":454,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.table.upsert",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.tablecreateinput",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.user.upsert",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":456,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":72,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":174,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"contributing.html":{}}}],["process",{"_index":930,"title":{},"body":{"contributing.html":{}}}],["process.env.jwt_secret",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":381,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":516,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":236,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":239,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":255,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":258,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:25",{"_index":247,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:26",{"_index":283,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:33",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":496,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.ts",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/product.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":476,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":240,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":1210,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":73,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":495,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":244,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{}}}],["professional",{"_index":1034,"title":{},"body":{"contributing.html":{}}}],["profile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["progress",{"_index":1266,"title":{},"body":{"todo.html":{}}}],["progressive",{"_index":1191,"title":{},"body":{"index.html":{}}}],["project",{"_index":666,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["project's",{"_index":1118,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":202,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1021,"title":{},"body":{"contributing.html":{}}}],["publishing",{"_index":1022,"title":{},"body":{"contributing.html":{}}}],["pull",{"_index":929,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["quantidade",{"_index":256,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":241,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["que",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["queijo",{"_index":265,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["race",{"_index":983,"title":{},"body":{"contributing.html":{}}}],["raw",{"_index":1253,"title":{},"body":{"todo.html":{}}}],["read",{"_index":1228,"title":{},"body":{"index.html":{}}}],["readme",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":937,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizando",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["realizar",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["reasonably",{"_index":1031,"title":{},"body":{"contributing.html":{}}}],["recebe",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["recebendo",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["recent",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["recommended",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["refer",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["reflect",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["regard",{"_index":1104,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":972,"title":{},"body":{"contributing.html":{}}}],["reject",{"_index":1051,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["religion",{"_index":984,"title":{},"body":{"contributing.html":{}}}],["reluctantly",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":792,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["removed",{"_index":780,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["remover",{"_index":483,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["repercussions",{"_index":1116,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":1267,"title":{},"body":{"todo.html":{}}}],["reported",{"_index":1090,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1105,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":914,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":951,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1085,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1081,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1072,"title":{},"body":{"contributing.html":{}}}],["req",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisição",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respectful",{"_index":995,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1046,"title":{},"body":{"contributing.html":{}}}],["response.dto",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":366,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:10",{"_index":370,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:15",{"_index":372,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["responsibilities",{"_index":1036,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1049,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1037,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":1097,"title":{},"body":{"contributing.html":{}}}],["results",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["return",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["reviewed",{"_index":1095,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":959,"title":{},"body":{"contributing.html":{}}}],["rewrite",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1048,"title":{},"body":{"contributing.html":{}}}],["ru",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":1206,"title":{},"body":{"index.html":{}}}],["running",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["russian",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["rw",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["saborosa",{"_index":267,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":1196,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":952,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1067,"title":{},"body":{"contributing.html":{}}}],["second",{"_index":958,"title":{},"body":{"contributing.html":{}}}],["secret",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["sections",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["seeds",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":443,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["sem",{"_index":245,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["semantic",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":805,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["senha",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["separately",{"_index":1110,"title":{},"body":{"contributing.html":{}}}],["ser",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["serve",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["setting",{"_index":1035,"title":{},"body":{"contributing.html":{}}}],["sexual",{"_index":985,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1011,"title":{},"body":{"contributing.html":{}}}],["showing",{"_index":1005,"title":{},"body":{"contributing.html":{}}}],["side",{"_index":1197,"title":{},"body":{"index.html":{}}}],["sign",{"_index":954,"title":{},"body":{"contributing.html":{}}}],["signoptions",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplified",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["site",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":974,"title":{},"body":{"contributing.html":{}}}],["slovak",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1076,"title":{},"body":{"contributing.html":{}}}],["somente",{"_index":487,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{}}}],["space",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["spaces",{"_index":1070,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":1107,"title":{},"body":{"contributing.html":{}}}],["spelling",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1222,"title":{},"body":{"index.html":{}}}],["src/.../01",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handle",{"_index":1187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:22",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/logged",{"_index":403,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/login",{"_index":365,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":360,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":362,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":363,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/main.ts",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":200,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":374,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":384,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":382,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":380,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":385,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":383,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":379,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":389,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:20",{"_index":395,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:28",{"_index":399,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:36",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":419,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":423,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":426,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:64",{"_index":428,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":424,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:87",{"_index":429,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":452,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":455,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":461,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":463,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/dto/create",{"_index":261,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":585,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":387,"title":{},"body":{"classes/Order.html":{}}}],["src/product/entities/product.entity.ts",{"_index":468,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":471,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":473,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":470,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":474,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":472,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":469,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":475,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":477,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:30",{"_index":480,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:38",{"_index":486,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:46",{"_index":488,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:54",{"_index":493,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:63",{"_index":484,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":515,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":517,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":519,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:15",{"_index":524,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:19",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:28",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:32",{"_index":521,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:38",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:51",{"_index":523,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":290,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":588,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entity",{"_index":386,"title":{},"body":{"classes/Order.html":{}}}],["src/table/entities/table.entity.ts",{"_index":541,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts:2",{"_index":543,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:3",{"_index":544,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:4",{"_index":542,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:5",{"_index":545,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":547,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:28",{"_index":552,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:36",{"_index":553,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:44",{"_index":548,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:52",{"_index":555,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:61",{"_index":549,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":570,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":572,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:12",{"_index":576,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:16",{"_index":577,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:25",{"_index":578,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:29",{"_index":574,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:35",{"_index":579,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:48",{"_index":575,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":573,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":591,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":373,"title":{},"body":{"classes/LoginResponseDto.html":{},"classes/Order.html":{}}}],["src/user/entities/user.entity.ts",{"_index":594,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":597,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":600,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":599,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":601,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":598,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":596,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":602,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":604,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":606,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":610,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":612,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":614,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":608,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":627,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":629,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:16",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:28",{"_index":634,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:34",{"_index":635,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:47",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:51",{"_index":632,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:71",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:97",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":431,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["standard",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["standardized",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":987,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":739,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["start:dev",{"_index":1209,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1211,"title":{},"body":{"index.html":{}}}],["started",{"_index":662,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["starter",{"_index":1201,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":1231,"title":{},"body":{"index.html":{}}}],["stop",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["style",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":698,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["such",{"_index":1025,"title":{},"body":{"contributing.html":{}}}],["summary",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1223,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1242,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["swedish",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["são",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":376,"title":{"classes/Table.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.controller",{"_index":571,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":556,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":291,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:11",{"_index":293,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":559,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table.ts",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/table.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":546,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":74,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":204,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tables",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableservice",{"_index":558,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1041,"title":{},"body":{"contributing.html":{}}}],["tallesl",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["task",{"_index":1265,"title":{},"body":{"todo.html":{}}}],["team",{"_index":1092,"title":{},"body":{"contributing.html":{}}}],["temporarily",{"_index":1059,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":1214,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1217,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1216,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1213,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1221,"title":{},"body":{"index.html":{}}}],["things",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["this.$connect",{"_index":465,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":466,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":411,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":412,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":415,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":442,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":445,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":447,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product",{"_index":539,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.create",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":540,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table",{"_index":583,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.create",{"_index":582,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":584,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":580,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":581,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":511,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":507,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(dto",{"_index":564,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":566,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":562,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":563,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":565,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":619,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":620,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":621,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["threatening",{"_index":1064,"title":{},"body":{"contributing.html":{}}}],["throughout",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["tianshuo",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["todas",{"_index":550,"title":{},"body":{"controllers/TableController.html":{}}}],["todo",{"_index":1250,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todo.md",{"_index":1251,"title":{},"body":{"todo.html":{}}}],["todos",{"_index":397,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["tomates",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":1232,"title":{},"body":{"index.html":{}}}],["towards",{"_index":1007,"title":{},"body":{"contributing.html":{}}}],["traditional",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["transformer",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["translation",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["translations",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["trolling",{"_index":1016,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":238,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["turkish",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["twitter",{"_index":1238,"title":{},"body":{"index.html":{}}}],["two",{"_index":955,"title":{},"body":{"contributing.html":{}}}],["tylerfortune8",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1200,"title":{},"body":{"index.html":{}}}],["typos",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["ukikwtmf4kms1mmb",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["ukrainian",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["um",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TableController.html":{}}}],["unacceptable",{"_index":1009,"title":{},"body":{"contributing.html":{}}}],["unauthorizedexception",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/functions.html":{}}}],["understand",{"_index":1255,"title":{},"body":{"todo.html":{}}}],["unicorns",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":1212,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":1249,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["unreleased",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1013,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":478,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":506,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":489,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateat",{"_index":595,"title":{},"body":{"classes/User.html":{}}}],["updatedat",{"_index":377,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":490,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":554,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":590,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["url",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"changelog.html":{}}}],["usage",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":772,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["useful",{"_index":945,"title":{},"body":{"contributing.html":{}}}],["useguards",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":115,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":628,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":592,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.passport",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.password",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user.service",{"_index":616,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":603,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":427,"title":{},"body":{"injectables/OrderService.html":{}}}],["usermodule",{"_index":75,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userselect",{"_index":630,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":615,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":740,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["ususário",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["usuário",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["utilizado",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validate",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":232,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":233,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":640,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":942,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":683,"title":{},"body":{"changelog.html":{},"contributing.html":{},"properties.html":{}}}],["versioning",{"_index":673,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["versions",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":919,"title":{},"body":{"contributing.html":{}}}],["view",{"_index":1252,"title":{},"body":{"todo.html":{}}}],["viewpoints",{"_index":997,"title":{},"body":{"contributing.html":{}}}],["visual",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["void",{"_index":485,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["vs",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["watch",{"_index":1207,"title":{},"body":{"index.html":{}}}],["way",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1236,"title":{},"body":{"index.html":{},"todo.html":{}}}],["webysther",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":963,"title":{},"body":{"contributing.html":{}}}],["wiki",{"_index":1053,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":918,"title":{},"body":{"contributing.html":{}}}],["within",{"_index":1069,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":1029,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":1256,"title":{},"body":{"todo.html":{}}}],["world",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["yanked",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["year",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["you'd",{"_index":1226,"title":{},"body":{"index.html":{}}}],["z",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zapashcanon",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["zeliosariex",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:22\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de Request do Express\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger/dist';\nimport { AppService } from './app.service';\nimport { Request } from 'express';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Recebe uma requisição GET e retorna um objeto de status\n   * da aplicação com a URL de documentação\n   * @param req Objeto de Request do Express\n   * @returns Objeto de status da aplicação\n   */\n\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status: 'Server is running! ',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { Get, UseGuards } from '@nestjs/common/decorators';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\nimport { AuthService } from './auth.service';\nimport { LoggedUser } from './dto/logged-user.decorator';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport/dist';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly  prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { nickname, password } = loginDto;\n\n    const user = await this.prisma.user.findUnique({ where: { nickname } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ nickname }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista com os IDs dos produtos que estão no pedido', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Numero da mesa que está realizando o pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsPositive, IsUUID, ValidateNested } from 'class-validator';\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\nexport class CreateOrderDto {\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Numero da mesa que está realizando o pedido',\n    example: 1,\n  })\n  tableNumber: number;\n\n  @ValidateNested({\n    each: true,\n  })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Lista com os IDs dos produtos que estão no pedido',\n    type: [CreateOrderProductDto],\n  })\n  products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: ' sem cebola'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do produto', example: 'ada34d69-8412-4415-b888-ff4ff6cb4c95'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantidade de itens no pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsPositive, IsString, IsUUID } from 'class-validator';\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do produto',\n    example: 'ada34d69-8412-4415-b888-ff4ff6cb4c95',\n  })\n  productId: string;\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantidade de itens no pedido',\n    example: 1,\n  })\n  quantity: number;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Observações do produto',\n    example: ' sem cebola',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do produto', example: 'Queijo mussarela saborosa, massa fina e tomates cereja'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'https://i.imgur.com/hNE75Iw.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do produto', example: 'Pizza de Mussarela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Preço do produto', example: 56})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do produto',\n    example: 'Pizza de Mussarela',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do produto',\n    example: 'Queijo mussarela saborosa, massa fina e tomates cereja',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Preço do produto',\n    example: 56.0,\n  })\n  price: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do produto',\n    example: 'https://i.imgur.com/hNE75Iw.png',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'Numero da mesa\"', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger/dist/decorators';\nimport { IsNumber, IsPositive } from 'class-validator';\n\nexport class CreateTableDto {\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Numero da mesa\"',\n    example: 1,\n  })\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://lh3.googleusercontent.com/a/AEdFTp7_GyE_zcl4tJfMtMp7f-UkiKwTmF4Kms1mMb-IZSs=s288-p-rw-no'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usuário. Apenas para exibição', example: 'PettBresolin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usuário. Utilizado no login. Deve ser único', example: 'PettersonBresolin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, Matches, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome de usuário. Utilizado no login. Deve ser único',\n    example: 'PettersonBresolin',\n  })\n  nickname: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome de usuário. Apenas para exibição',\n    example: 'PettBresolin',\n  })\n  name: string;\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@1234',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example:\n      'https://lh3.googleusercontent.com/a/AEdFTp7_GyE_zcl4tJfMtMp7f-UkiKwTmF4Kms1mMb-IZSs=s288-p-rw-no',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { Injectable } from '@nestjs/common/decorators/core/injectable.decorator';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Ususário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'PettersonBresolin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'PettersonBresolin',\n  })\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6IlBldHRlcnNvbkJyZXNvbGluIiwiaWF0IjoxNjc2Njc2NjQ4LCJleHAiOjE2NzY3NjMwNDh9.tWP8sI_Ui_z0ut_iI00EcPPymQERKkuTwwY1BsY8iQ4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6IlBldHRlcnNvbkJyZXNvbGluIiwiaWF0IjoxNjc2Njc2NjQ4LCJleHAiOjE2NzY3NjMwNDh9.tWP8sI_Ui_z0ut_iI00EcPPymQERKkuTwwY1BsY8iQ4',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table } from 'src/table/entities/table.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { Product } from 'src/product/entities/product.entity';\n\nexport class Order {\n  id?: string;\n  user?: User;\n  table?: Table;\n  createdAt?: Date;\n  updatedAt?: Date;\n  products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\nimport { LoggedUser } from 'src/auth/dto/logged-user.decorator';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um pedido',\n  })\n  create(@LoggedUser() user: User, @Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(user.id, createOrderDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os pedidos',\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um pedido pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(userId: string, createOrderDto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n      table: {\n        connect: {\n          number: createOrderDto.tableNumber,\n        },\n      },\n      products: {\n        createMany: {\n          data: createOrderDto.products.map((createOrderProductDto) => ({\n            productId: createOrderProductDto.productId,\n            quantity: createOrderProductDto.quantity,\n            description: createOrderProductDto.description,\n          })),\n        },\n      },\n    };\n    return this.prisma.order\n      .create({\n        data,\n        select: {\n          id: true,\n          table: {\n            select: {\n              number: true,\n            },\n          },\n          user: {\n            select: {\n              name: true,\n            },\n          },\n          products: {\n            select: {\n              quantity: true,\n              description: true,\n              product: {\n                select: {\n                  name: true,\n                },\n              },\n            },\n          },\n        },\n      })\n      .catch(handleError);\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            products: true,\n          },\n        },\n      },\n    });\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: { id },\n      include: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        products: {\n          select: {\n            product: {\n              select: {\n                id: true,\n                name: true,\n                price: true,\n                image: true,\n                description: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtos'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar somente um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common/enums';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um produto',\n  })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os produtos',\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar somente um produto',\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um produto',\n  })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um produto pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.product.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id}, não encontrado`);\n    }\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(dto: CreateProductDto): Promise {\n    const data: Product = { ...dto };\n\n    return this.prisma.product.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateProductDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.product\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.product.delete({\n      where: { id },\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n  id?: string;\n  number: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as mesas'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Listar somente uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  Delete,\n  HttpCode,\n  Param,\n  Patch,\n  UseGuards,\n} from '@nestjs/common/decorators';\nimport { HttpStatus } from '@nestjs/common/enums';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('table')\nexport class TableController {\n  constructor(private readonly tableService: TableService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todas as mesas',\n  })\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Listar somente uma mesa',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar uma mesa',\n  })\n  create(@Body() dto: CreateTableDto): Promise {\n    return this.tableService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar uma mesa pelo ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover uma mesa pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.tableService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TableModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [TableController],\n  providers: [TableService],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\n\n@Injectable()\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.table.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`ID ${id}, não encontrado`);\n    }\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n\n    return this.prisma.table.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateTableDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.table\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.table.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updateAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updateAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updateAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um único usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Listar todos os usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Visualizar um único usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Editar usuário pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Listar todos os usuário',\n  })\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Visualizar um único usuário pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Editar usuário pelo ID',\n  })\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um único usuário pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (dto.password) {\n      if (dto.password !== dto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres\nto Semantic Versioning.\nUnreleased\n1.0.0 - 2017-06-20\nAdded\n\nNew visual identity by @tylerfortune8.\nVersion navigation.\nLinks to latest released version in previous versions.\n\"Why keep a changelog?\" section.\n\"Who needs a changelog?\" section.\n\"How do I make a changelog?\" section.\n\"Frequently Asked Questions\" section.\nNew \"Guiding Principles\" sub-section to \"How do I make a changelog?\".\nSimplified and Traditional Chinese translations from @tianshuo.\nGerman translation from @mpbzh & @Art4.\nItalian translation from @azkidenz.\nSwedish translation from @magol.\nTurkish translation from @karalamalar.\nFrench translation from @zapashcanon.\nBrazilian Portugese translation from @Webysther.\nPolish translation from @amielucha & @m-aciek.\nRussian translation from @aishek.\nCzech translation from @h4vry.\nSlovak translation from @jkostolansky.\nKorean translation from @pierceh89.\nCroatian translation from @porx.\nPersian translation from @Hameds.\nUkrainian translation from @osadchyi-s.\n\nChanged\n\nStart using \"changelog\" over \"change log\" since it's the common usage.\nStart versioning based on the current English version at 0.3.0 to help translation authors keep things up-to-date.\nRewrite \"What makes unicorns cry?\" section.\nRewrite \"Ignoring Deprecations\" sub-section to clarify the ideal scenario.\nImprove \"Commit log diffs\" sub-section to further argument against them.\nMerge \"Why can’t people just use a git log diff?\" with \"Commit log diffs\"\nFix typos in Simplified Chinese and Traditional Chinese translations.\nFix typos in Brazilian Portuguese translation.\nFix typos in Turkish translation.\nFix typos in Czech translation.\nFix typos in Swedish translation.\nImprove phrasing in French translation.\nFix phrasing and spelling in German translation.\n\nRemoved\n\nSection about \"changelog\" vs \"CHANGELOG\".\n\n0.3.0 - 2015-12-03\nAdded\n\nRU translation from @aishek.\npt-BR translation from @tallesl.\nes-ES translation from @ZeliosAriex.\n\n0.2.0 - 2015-10-06\nChanged\n\nRemove exclusionary mentions of \"open source\" since this project can benefit both \"open\" and \"closed\" source projects\nequally.\n\n0.1.0 - 2015-10-06\nAdded\n\nAnswer \"Should you ever rewrite a change log?\".\n\nChanged\n\nImprove argument against commit logs.\nStart following SemVer properly.\n\n0.0.8 - 2015-02-17\nChanged\n\nUpdate year to match in every README example.\nReluctantly stop making fun of Brits only, since most of the world writes dates in a strange way.\n\nFixed\n\nFix typos in recent README changes.\nUpdate outdated unreleased diff link.\n\n0.0.7 - 2015-02-16\nAdded\n\nLink, and make it obvious that date format is ISO 8601.\n\nChanged\n\nClarified the section on \"Is there a standard change log format?\".\n\nFixed\n\nFix Markdown links to tag comparison URL with footnote-style links.\n\n0.0.6 - 2014-12-12\nAdded\n\nREADME section on \"yanked\" releases.\n\n0.0.5 - 2014-08-09\nAdded\n\nMarkdown links to version tags on release headings.\nUnreleased section to gather unreleased changes and encourage note keeping prior to releases.\n\n0.0.4 - 2014-08-09\nAdded\n\nBetter explanation of the difference between the file (\"CHANGELOG\")\nand its function \"the change log\".\n\nChanged\n\nRefer to a \"change log\" instead of a \"CHANGELOG\" throughout the site to differentiate between the file and the purpose\nof the file — the logging of changes.\n\nRemoved\n\nRemove empty sections from CHANGELOG, they occupy too much space and create too much noise in the file. People will\nhave to assume that the missing sections were intentionally left out because they contained no notable changes.\n\n0.0.3 - 2014-08-09\nAdded\n\n\"Why should I care?\" section mentioning The Changelog podcast.\n\n0.0.2 - 2014-07-10\nAdded\n\nExplanation of the recommended reverse chronological release ordering.\n\n0.0.1 - 2014-05-31\nAdded\n\nThis CHANGELOG file to hopefully serve as an evolving example of a standardized open source project CHANGELOG.\nCNAME file to enable GitHub Pages custom domain\nREADME now contains answers to common questions about CHANGELOGs\nGood examples and basic guidelines, including proper date formatting.\nCounter-examples: \"What makes unicorns cry?\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue, email, or any other\nmethod with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a build.\nUpdate the README.md with details of changes to the interface, this includes new environment variables, exposed\nports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this Pull Request would\nrepresent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have\npermission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making\nparticipation in our project and our community a harassment-free experience for everyone, regardless of age, body size,\ndisability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment include:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or advances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic address, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take\nappropriate and fair corrective action in response to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits,\nissues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any\ncontributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the\nproject or its community. Examples of representing a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed representative at an online or offline\nevent. Representation of a project may be further defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team\nat [INSERT EMAIL ADDRESS]. All complaints will be reviewed and investigated and will result in a response that is deemed\nnecessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to\nthe reporter of an incident. Further details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent\nrepercussions as determined by other members of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4, available\nat http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            products\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            table\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/mapped-types : ^1.2.0\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @prisma/client : ^4.9.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(err: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nExample of TODO.md\nThis is an example of TODO.md\nView the raw content of this file to understand the format.\nTodo\n\n Work on the website ~3d #feat @john 2020-03-20\n Fix the homepage ~1d #bug @jane\n Sub-task or description\n\n\n\nIn Progress\n\n Work on Github Repo [JIRA-345]\n\nDone ✓\n\n Create my first TODO.md\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            product   (src/.../02-product.ts)\n                        \n                        \n                            products   (src/.../02-product.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            table   (src/.../03-table.ts)\n                        \n                        \n                            tables   (src/.../03-table.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/dto/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.passport;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-product.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(products)) {\n    await prisma.product.upsert({\n      where: { name: obj.name },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.ProductCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Pizza de Mussarela',\n    description: 'Queijo mussarela saborosa, massa fina e tomates cereja',\n    price: 56.0,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n  {\n    name: 'Pizza de Calabresa',\n    description: 'Queijo mussarela saborosa, massa fina e tomates cereja',\n    price: 56.0,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n  {\n    name: 'Pizza de Frango',\n    description: 'Queijo mussarela saborosa, massa fina e tomates cereja',\n    price: 56.0,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-table.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(tables)) {\n    await prisma.table.upsert({\n      where: { number: obj.number },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TableCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    number: 1,\n  },\n  {\n    number: 2,\n  },\n  {\n    number: 3,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(users)) {\n    await prisma.user.upsert({\n      where: { nickname: obj.nickname },\n      update: {},\n      create: {\n        ...obj,\n        password: await bcrypt.hash(obj.password, 10),\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    nickname: 'PettersonBresolin',\n    name: 'PettBresolin',\n    password: 'Abcd@1234',\n    image:\n      'https://lh3.googleusercontent.com/a/AEdFTp7_GyE_zcl4tJfMtMp7f-UkiKwTmF4Kms1mMb-IZSs=s288-p-rw-no',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
